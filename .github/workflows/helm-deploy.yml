name: Helm Deploy Pipeline

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - 'helm/**'
      - '.github/workflows/helm-deploy.yml'
  workflow_run:
    workflows: ["Build and Push Container Images"]
    types:
      - completed

jobs:
  helm-deploy:
    name: Deploy Helm Charts to AKS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: my-prod-rg
          cluster-name: prod-aks

      - name: Deploy ingress-nginx
        if: >-
          contains(github.event.head_commit.modified, 'helm/ingress-nginx/') ||
          contains(github.event.head_commit.modified, 'helm/environment/prod/ingress-nginx-values.yaml')
        run: |
          helm upgrade --install ingress-nginx ./helm/ingress-nginx -n prod --create-namespace -f ./helm/environment/prod/ingress-nginx-values.yaml

      - name: Wait for ingress-nginx controller and admission webhook
        if: >-
          contains(github.event.head_commit.modified, 'helm/ingress-nginx/') ||
          contains(github.event.head_commit.modified, 'helm/environment/prod/ingress-nginx-values.yaml')
        run: |
          kubectl rollout status deployment/ingress-nginx-controller -n prod --timeout=120s
          kubectl wait --for=condition=available --timeout=120s deployment/ingress-nginx-controller -n prod
          for i in {1..12}; do
            kubectl get endpoints ingress-nginx-controller-admission -n prod | grep -q 'ENDPOINTS' && break
            echo 'Waiting for ingress-nginx-controller-admission endpoints...'
            sleep 10
          done

      - name: Deploy PostgreSQL
        if: >-
          contains(github.event.head_commit.modified, 'helm/bitnami-postgres/') ||
          contains(github.event.head_commit.modified, 'helm/environment/prod/postgres-ha-values.yaml')
        run: |
          helm upgrade --install postgresha ./helm/bitnami-postgres -n prod -f ./helm/environment/prod/postgres-ha-values.yaml \
            --set auth.password=${{ secrets.PG_USER_PASSWORD }} \
            --set auth.replicationPassword=${{ secrets.PG_REPL_PASSWORD }}

      - name: Download image tag artifact
        id: download_image_tag
        continue-on-error: true
        uses: actions/download-artifact@v4
        with:
          name: image-tag

      - name: Set image tag
        id: set_image_tag
        run: |
          if [ -f image-tag.txt ]; then
            echo "IMAGE_TAG=$(cat image-tag.txt)" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=latest" >> $GITHUB_ENV
          fi

      - name: Deploy App
        run: |
          helm upgrade --install sampleapp ./helm/app -n prod -f ./helm/environment/prod/app-values.yaml \
            --set frontend.image=ghcr.io/amromran102/demo/app-frontend:$IMAGE_TAG \
            --set backend.image=ghcr.io/amromran102/demo/app-backend:$IMAGE_TAG \
            --set secrets.DBconnectionString="postgresql://myuser:${{ secrets.PG_USER_PASSWORD }}@postgresha-postgresql-primary.prod.svc.cluster.local:5432/ideasdb"
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}

      - name: Show all resources
        run: |
          kubectl get all -n prod
